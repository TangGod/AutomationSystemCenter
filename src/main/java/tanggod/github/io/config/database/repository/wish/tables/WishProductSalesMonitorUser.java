/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductSalesMonitorUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WishProductSalesMonitorUser extends TableImpl<WishProductSalesMonitorUserRecord> {

    private static final long serialVersionUID = 29074691;

    /**
     * The reference instance of <code>wish.wish_product_sales_monitor_user</code>
     */
    public static final WishProductSalesMonitorUser WISH_PRODUCT_SALES_MONITOR_USER = new WishProductSalesMonitorUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WishProductSalesMonitorUserRecord> getRecordType() {
        return WishProductSalesMonitorUserRecord.class;
    }

    /**
     * The column <code>wish.wish_product_sales_monitor_user.id</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product_sales_monitor_user.access_token</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, String> ACCESS_TOKEN = createField("access_token", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product_sales_monitor_user.auth_code</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, String> AUTH_CODE = createField("auth_code", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product_sales_monitor_user.actual_name</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, String> ACTUAL_NAME = createField("actual_name", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>wish.wish_product_sales_monitor_user.sort</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wish.wish_product_sales_monitor_user.filter_status</code>.
     */
    public final TableField<WishProductSalesMonitorUserRecord, Boolean> FILTER_STATUS = createField("filter_status", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>wish.wish_product_sales_monitor_user</code> table reference
     */
    public WishProductSalesMonitorUser() {
        this(DSL.name("wish_product_sales_monitor_user"), null);
    }

    /**
     * Create an aliased <code>wish.wish_product_sales_monitor_user</code> table reference
     */
    public WishProductSalesMonitorUser(String alias) {
        this(DSL.name(alias), WISH_PRODUCT_SALES_MONITOR_USER);
    }

    /**
     * Create an aliased <code>wish.wish_product_sales_monitor_user</code> table reference
     */
    public WishProductSalesMonitorUser(Name alias) {
        this(alias, WISH_PRODUCT_SALES_MONITOR_USER);
    }

    private WishProductSalesMonitorUser(Name alias, Table<WishProductSalesMonitorUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private WishProductSalesMonitorUser(Name alias, Table<WishProductSalesMonitorUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WISH_PRODUCT_SALES_MONITOR_USER_AUTH_CODE, Indexes.WISH_PRODUCT_SALES_MONITOR_USER_FILTER_STATUS, Indexes.WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY, Indexes.WISH_PRODUCT_SALES_MONITOR_USER_SORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WishProductSalesMonitorUserRecord> getPrimaryKey() {
        return Keys.KEY_WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WishProductSalesMonitorUserRecord>> getKeys() {
        return Arrays.<UniqueKey<WishProductSalesMonitorUserRecord>>asList(Keys.KEY_WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishProductSalesMonitorUser as(String alias) {
        return new WishProductSalesMonitorUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishProductSalesMonitorUser as(Name alias) {
        return new WishProductSalesMonitorUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WishProductSalesMonitorUser rename(String name) {
        return new WishProductSalesMonitorUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WishProductSalesMonitorUser rename(Name name) {
        return new WishProductSalesMonitorUser(name, null);
    }
}
