/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.oauth;


import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import tanggod.github.io.config.database.repository.oauth.tables.Wish;
import tanggod.github.io.config.database.repository.oauth.tables.Wishpost;
import tanggod.github.io.config.database.repository.oauth.tables.records.WishRecord;
import tanggod.github.io.config.database.repository.oauth.tables.records.WishpostRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>OAuth</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<WishRecord> KEY_WISH_PRIMARY = UniqueKeys0.KEY_WISH_PRIMARY;
    public static final UniqueKey<WishpostRecord> KEY_WISHPOST_PRIMARY = UniqueKeys0.KEY_WISHPOST_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<WishRecord> KEY_WISH_PRIMARY = Internal.createUniqueKey(Wish.WISH, "KEY_wish_PRIMARY", Wish.WISH.ID);
        public static final UniqueKey<WishpostRecord> KEY_WISHPOST_PRIMARY = Internal.createUniqueKey(Wishpost.WISHPOST, "KEY_wishpost_PRIMARY", Wishpost.WISHPOST.ID);
    }
}
