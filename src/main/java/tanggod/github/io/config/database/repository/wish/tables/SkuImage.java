/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.SkuImageRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkuImage extends TableImpl<SkuImageRecord> {

    private static final long serialVersionUID = 1883922728;

    /**
     * The reference instance of <code>wish.sku_image</code>
     */
    public static final SkuImage SKU_IMAGE = new SkuImage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SkuImageRecord> getRecordType() {
        return SkuImageRecord.class;
    }

    /**
     * The column <code>wish.sku_image.id</code>.
     */
    public final TableField<SkuImageRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.sku_image.url</code>.
     */
    public final TableField<SkuImageRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(10000), this, "");

    /**
     * The column <code>wish.sku_image.parentSKU</code>.
     */
    public final TableField<SkuImageRecord, String> PARENTSKU = createField("parentSKU", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.sku_image.createDate</code>.
     */
    public final TableField<SkuImageRecord, Date> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>wish.sku_image.fileSize</code>.
     */
    public final TableField<SkuImageRecord, Long> FILESIZE = createField("fileSize", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>wish.sku_image.userId</code>.
     */
    public final TableField<SkuImageRecord, String> USERID = createField("userId", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>wish.sku_image.taskRecordId</code>.
     */
    public final TableField<SkuImageRecord, String> TASKRECORDID = createField("taskRecordId", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * Create a <code>wish.sku_image</code> table reference
     */
    public SkuImage() {
        this(DSL.name("sku_image"), null);
    }

    /**
     * Create an aliased <code>wish.sku_image</code> table reference
     */
    public SkuImage(String alias) {
        this(DSL.name(alias), SKU_IMAGE);
    }

    /**
     * Create an aliased <code>wish.sku_image</code> table reference
     */
    public SkuImage(Name alias) {
        this(alias, SKU_IMAGE);
    }

    private SkuImage(Name alias, Table<SkuImageRecord> aliased) {
        this(alias, aliased, null);
    }

    private SkuImage(Name alias, Table<SkuImageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SKU_IMAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SkuImageRecord> getPrimaryKey() {
        return Keys.KEY_SKU_IMAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SkuImageRecord>> getKeys() {
        return Arrays.<UniqueKey<SkuImageRecord>>asList(Keys.KEY_SKU_IMAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SkuImage as(String alias) {
        return new SkuImage(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SkuImage as(Name alias) {
        return new SkuImage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SkuImage rename(String name) {
        return new SkuImage(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SkuImage rename(Name name) {
        return new SkuImage(name, null);
    }
}
