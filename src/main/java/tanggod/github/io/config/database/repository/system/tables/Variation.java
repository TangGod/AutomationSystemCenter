/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.system.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.system.Indexes;
import tanggod.github.io.config.database.repository.system.Keys;
import tanggod.github.io.config.database.repository.system.System;
import tanggod.github.io.config.database.repository.system.tables.records.VariationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Variation extends TableImpl<VariationRecord> {

    private static final long serialVersionUID = -1325337601;

    /**
     * The reference instance of <code>system.variation</code>
     */
    public static final Variation VARIATION = new Variation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VariationRecord> getRecordType() {
        return VariationRecord.class;
    }

    /**
     * The column <code>system.variation.product_id</code>.
     */
    public final TableField<VariationRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>system.variation.parent_sku</code>.
     */
    public final TableField<VariationRecord, String> PARENT_SKU = createField("parent_sku", org.jooq.impl.SQLDataType.VARCHAR(400).nullable(false), this, "");

    /**
     * The column <code>system.variation.variation_id</code>.
     */
    public final TableField<VariationRecord, String> VARIATION_ID = createField("variation_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>system.variation.image_url</code>.
     */
    public final TableField<VariationRecord, String> IMAGE_URL = createField("image_url", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>system.variation.sku_name</code>.
     */
    public final TableField<VariationRecord, String> SKU_NAME = createField("sku_name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>system.variation.size</code>.
     */
    public final TableField<VariationRecord, String> SIZE = createField("size", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>system.variation.color</code>.
     */
    public final TableField<VariationRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>system.variation.price</code>.
     */
    public final TableField<VariationRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "");

    /**
     * The column <code>system.variation.inventory</code>.
     */
    public final TableField<VariationRecord, Integer> INVENTORY = createField("inventory", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>system.variation.auth_code</code>.
     */
    public final TableField<VariationRecord, String> AUTH_CODE = createField("auth_code", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>system.variation.create_date</code>.
     */
    public final TableField<VariationRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>system.variation.update_date</code>.
     */
    public final TableField<VariationRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>system.variation.enable</code>.
     */
    public final TableField<VariationRecord, Boolean> ENABLE = createField("enable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>system.variation</code> table reference
     */
    public Variation() {
        this(DSL.name("variation"), null);
    }

    /**
     * Create an aliased <code>system.variation</code> table reference
     */
    public Variation(String alias) {
        this(DSL.name(alias), VARIATION);
    }

    /**
     * Create an aliased <code>system.variation</code> table reference
     */
    public Variation(Name alias) {
        this(alias, VARIATION);
    }

    private Variation(Name alias, Table<VariationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Variation(Name alias, Table<VariationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return System.SYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VARIATION_1, Indexes.VARIATION_2, Indexes.VARIATION_3, Indexes.VARIATION_4, Indexes.VARIATION_5, Indexes.VARIATION_6, Indexes.VARIATION_7, Indexes.VARIATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VariationRecord> getPrimaryKey() {
        return Keys.KEY_VARIATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VariationRecord>> getKeys() {
        return Arrays.<UniqueKey<VariationRecord>>asList(Keys.KEY_VARIATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Variation as(String alias) {
        return new Variation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Variation as(Name alias) {
        return new Variation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Variation rename(String name) {
        return new Variation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Variation rename(Name name) {
        return new Variation(name, null);
    }
}
