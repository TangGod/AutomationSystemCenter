/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.JieZiManCookieRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JieZiManCookie extends TableImpl<JieZiManCookieRecord> {

    private static final long serialVersionUID = 471369854;

    /**
     * The reference instance of <code>wish.jie_zi_man_cookie</code>
     */
    public static final JieZiManCookie JIE_ZI_MAN_COOKIE = new JieZiManCookie();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JieZiManCookieRecord> getRecordType() {
        return JieZiManCookieRecord.class;
    }

    /**
     * The column <code>wish.jie_zi_man_cookie.id</code>.
     */
    public final TableField<JieZiManCookieRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.jie_zi_man_cookie.cookie</code>.
     */
    public final TableField<JieZiManCookieRecord, String> COOKIE = createField("cookie", org.jooq.impl.SQLDataType.VARCHAR(5000).nullable(false), this, "");

    /**
     * The column <code>wish.jie_zi_man_cookie.access_token</code>.
     */
    public final TableField<JieZiManCookieRecord, String> ACCESS_TOKEN = createField("access_token", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * Create a <code>wish.jie_zi_man_cookie</code> table reference
     */
    public JieZiManCookie() {
        this(DSL.name("jie_zi_man_cookie"), null);
    }

    /**
     * Create an aliased <code>wish.jie_zi_man_cookie</code> table reference
     */
    public JieZiManCookie(String alias) {
        this(DSL.name(alias), JIE_ZI_MAN_COOKIE);
    }

    /**
     * Create an aliased <code>wish.jie_zi_man_cookie</code> table reference
     */
    public JieZiManCookie(Name alias) {
        this(alias, JIE_ZI_MAN_COOKIE);
    }

    private JieZiManCookie(Name alias, Table<JieZiManCookieRecord> aliased) {
        this(alias, aliased, null);
    }

    private JieZiManCookie(Name alias, Table<JieZiManCookieRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JIE_ZI_MAN_COOKIE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JieZiManCookieRecord> getPrimaryKey() {
        return Keys.KEY_JIE_ZI_MAN_COOKIE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JieZiManCookieRecord>> getKeys() {
        return Arrays.<UniqueKey<JieZiManCookieRecord>>asList(Keys.KEY_JIE_ZI_MAN_COOKIE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JieZiManCookie as(String alias) {
        return new JieZiManCookie(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JieZiManCookie as(Name alias) {
        return new JieZiManCookie(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JieZiManCookie rename(String name) {
        return new JieZiManCookie(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JieZiManCookie rename(Name name) {
        return new JieZiManCookie(name, null);
    }
}
