/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.WishUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WishUser extends TableImpl<WishUserRecord> {

    private static final long serialVersionUID = -878301024;

    /**
     * The reference instance of <code>wish.wish_user</code>
     */
    public static final WishUser WISH_USER = new WishUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WishUserRecord> getRecordType() {
        return WishUserRecord.class;
    }

    /**
     * The column <code>wish.wish_user.id</code>.
     */
    public final TableField<WishUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_user.access_token</code>.
     */
    public final TableField<WishUserRecord, String> ACCESS_TOKEN = createField("access_token", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_user.userName</code>.
     */
    public final TableField<WishUserRecord, String> USERNAME = createField("userName", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_user.actualName</code>.
     */
    public final TableField<WishUserRecord, String> ACTUALNAME = createField("actualName", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_user.dianxiaomiUserName</code>.
     */
    public final TableField<WishUserRecord, String> DIANXIAOMIUSERNAME = createField("dianxiaomiUserName", org.jooq.impl.SQLDataType.VARCHAR(500).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>wish.wish_user</code> table reference
     */
    public WishUser() {
        this(DSL.name("wish_user"), null);
    }

    /**
     * Create an aliased <code>wish.wish_user</code> table reference
     */
    public WishUser(String alias) {
        this(DSL.name(alias), WISH_USER);
    }

    /**
     * Create an aliased <code>wish.wish_user</code> table reference
     */
    public WishUser(Name alias) {
        this(alias, WISH_USER);
    }

    private WishUser(Name alias, Table<WishUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private WishUser(Name alias, Table<WishUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WISH_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WishUserRecord> getPrimaryKey() {
        return Keys.KEY_WISH_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WishUserRecord>> getKeys() {
        return Arrays.<UniqueKey<WishUserRecord>>asList(Keys.KEY_WISH_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishUser as(String alias) {
        return new WishUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishUser as(Name alias) {
        return new WishUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WishUser rename(String name) {
        return new WishUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WishUser rename(Name name) {
        return new WishUser(name, null);
    }
}
