/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.OperationHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperationHistory extends TableImpl<OperationHistoryRecord> {

    private static final long serialVersionUID = 505976407;

    /**
     * The reference instance of <code>wish.operation_history</code>
     */
    public static final OperationHistory OPERATION_HISTORY = new OperationHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OperationHistoryRecord> getRecordType() {
        return OperationHistoryRecord.class;
    }

    /**
     * The column <code>wish.operation_history.id</code>.
     */
    public final TableField<OperationHistoryRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>wish.operation_history.create_date</code>.
     */
    public final TableField<OperationHistoryRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish.operation_history.request_ip</code>.
     */
    public final TableField<OperationHistoryRecord, String> REQUEST_IP = createField("request_ip", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>wish.operation_history.index_name</code>.
     */
    public final TableField<OperationHistoryRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>wish.operation_history.collect_user_name</code>.
     */
    public final TableField<OperationHistoryRecord, String> COLLECT_USER_NAME = createField("collect_user_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>wish.operation_history.request_uri</code>.
     */
    public final TableField<OperationHistoryRecord, String> REQUEST_URI = createField("request_uri", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.operation_history.reuqest_parameter</code>.
     */
    public final TableField<OperationHistoryRecord, String> REUQEST_PARAMETER = createField("reuqest_parameter", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * Create a <code>wish.operation_history</code> table reference
     */
    public OperationHistory() {
        this(DSL.name("operation_history"), null);
    }

    /**
     * Create an aliased <code>wish.operation_history</code> table reference
     */
    public OperationHistory(String alias) {
        this(DSL.name(alias), OPERATION_HISTORY);
    }

    /**
     * Create an aliased <code>wish.operation_history</code> table reference
     */
    public OperationHistory(Name alias) {
        this(alias, OPERATION_HISTORY);
    }

    private OperationHistory(Name alias, Table<OperationHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private OperationHistory(Name alias, Table<OperationHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OPERATION_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OperationHistoryRecord> getPrimaryKey() {
        return Keys.KEY_OPERATION_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OperationHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<OperationHistoryRecord>>asList(Keys.KEY_OPERATION_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OperationHistory as(String alias) {
        return new OperationHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OperationHistory as(Name alias) {
        return new OperationHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OperationHistory rename(String name) {
        return new OperationHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OperationHistory rename(Name name) {
        return new OperationHistory(name, null);
    }
}
