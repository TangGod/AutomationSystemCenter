/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataPermissionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryDataPermission extends TableImpl<CategoryDataPermissionRecord> {

    private static final long serialVersionUID = -1727596554;

    /**
     * The reference instance of <code>wish.category_data_permission</code>
     */
    public static final CategoryDataPermission CATEGORY_DATA_PERMISSION = new CategoryDataPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CategoryDataPermissionRecord> getRecordType() {
        return CategoryDataPermissionRecord.class;
    }

    /**
     * The column <code>wish.category_data_permission.id</code>.
     */
    public final TableField<CategoryDataPermissionRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>wish.category_data_permission.product_id</code>.
     */
    public final TableField<CategoryDataPermissionRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.category_data_permission.with</code>.
     */
    public final TableField<CategoryDataPermissionRecord, Integer> WITH = createField("with", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wish.category_data_permission.shelf</code>.
     */
    public final TableField<CategoryDataPermissionRecord, Integer> SHELF = createField("shelf", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wish.category_data_permission.create_date</code>.
     */
    public final TableField<CategoryDataPermissionRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish.category_data_permission.collection_data_user_id</code>.
     */
    public final TableField<CategoryDataPermissionRecord, String> COLLECTION_DATA_USER_ID = createField("collection_data_user_id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * Create a <code>wish.category_data_permission</code> table reference
     */
    public CategoryDataPermission() {
        this(DSL.name("category_data_permission"), null);
    }

    /**
     * Create an aliased <code>wish.category_data_permission</code> table reference
     */
    public CategoryDataPermission(String alias) {
        this(DSL.name(alias), CATEGORY_DATA_PERMISSION);
    }

    /**
     * Create an aliased <code>wish.category_data_permission</code> table reference
     */
    public CategoryDataPermission(Name alias) {
        this(alias, CATEGORY_DATA_PERMISSION);
    }

    private CategoryDataPermission(Name alias, Table<CategoryDataPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private CategoryDataPermission(Name alias, Table<CategoryDataPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CATEGORY_DATA_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CategoryDataPermissionRecord> getPrimaryKey() {
        return Keys.KEY_CATEGORY_DATA_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CategoryDataPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<CategoryDataPermissionRecord>>asList(Keys.KEY_CATEGORY_DATA_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryDataPermission as(String alias) {
        return new CategoryDataPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CategoryDataPermission as(Name alias) {
        return new CategoryDataPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryDataPermission rename(String name) {
        return new CategoryDataPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryDataPermission rename(Name name) {
        return new CategoryDataPermission(name, null);
    }
}
