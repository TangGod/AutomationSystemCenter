/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.dummy_data.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.dummy_data.DummyData;
import tanggod.github.io.config.database.repository.dummy_data.Indexes;
import tanggod.github.io.config.database.repository.dummy_data.Keys;
import tanggod.github.io.config.database.repository.dummy_data.tables.records.DummyChatgptUserNameRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DummyChatgptUserName extends TableImpl<DummyChatgptUserNameRecord> {

    private static final long serialVersionUID = -1960871602;

    /**
     * The reference instance of <code>dummy_data.dummy_chatgpt_user_name</code>
     */
    public static final DummyChatgptUserName DUMMY_CHATGPT_USER_NAME = new DummyChatgptUserName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DummyChatgptUserNameRecord> getRecordType() {
        return DummyChatgptUserNameRecord.class;
    }

    /**
     * The column <code>dummy_data.dummy_chatgpt_user_name.id</code>.
     */
    public final TableField<DummyChatgptUserNameRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>dummy_data.dummy_chatgpt_user_name.russia_name</code>.
     */
    public final TableField<DummyChatgptUserNameRecord, String> RUSSIA_NAME = createField("russia_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>dummy_data.dummy_chatgpt_user_name</code> table reference
     */
    public DummyChatgptUserName() {
        this(DSL.name("dummy_chatgpt_user_name"), null);
    }

    /**
     * Create an aliased <code>dummy_data.dummy_chatgpt_user_name</code> table reference
     */
    public DummyChatgptUserName(String alias) {
        this(DSL.name(alias), DUMMY_CHATGPT_USER_NAME);
    }

    /**
     * Create an aliased <code>dummy_data.dummy_chatgpt_user_name</code> table reference
     */
    public DummyChatgptUserName(Name alias) {
        this(alias, DUMMY_CHATGPT_USER_NAME);
    }

    private DummyChatgptUserName(Name alias, Table<DummyChatgptUserNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private DummyChatgptUserName(Name alias, Table<DummyChatgptUserNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DummyData.DUMMY_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DUMMY_CHATGPT_USER_NAME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DummyChatgptUserNameRecord> getPrimaryKey() {
        return Keys.KEY_DUMMY_CHATGPT_USER_NAME_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DummyChatgptUserNameRecord>> getKeys() {
        return Arrays.<UniqueKey<DummyChatgptUserNameRecord>>asList(Keys.KEY_DUMMY_CHATGPT_USER_NAME_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DummyChatgptUserName as(String alias) {
        return new DummyChatgptUserName(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DummyChatgptUserName as(Name alias) {
        return new DummyChatgptUserName(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DummyChatgptUserName rename(String name) {
        return new DummyChatgptUserName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DummyChatgptUserName rename(Name name) {
        return new DummyChatgptUserName(name, null);
    }
}
