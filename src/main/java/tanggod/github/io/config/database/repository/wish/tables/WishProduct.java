/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WishProduct extends TableImpl<WishProductRecord> {

    private static final long serialVersionUID = 1360318167;

    /**
     * The reference instance of <code>wish.wish_product</code>
     */
    public static final WishProduct WISH_PRODUCT = new WishProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WishProductRecord> getRecordType() {
        return WishProductRecord.class;
    }

    /**
     * The column <code>wish.wish_product.id</code>.
     */
    public final TableField<WishProductRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.main_image</code>.
     */
    public final TableField<WishProductRecord, String> MAIN_IMAGE = createField("main_image", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.name</code>.
     */
    public final TableField<WishProductRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.extra_images</code>.
     */
    public final TableField<WishProductRecord, String> EXTRA_IMAGES = createField("extra_images", org.jooq.impl.SQLDataType.VARCHAR(5000).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.number_saves</code>.
     */
    public final TableField<WishProductRecord, Integer> NUMBER_SAVES = createField("number_saves", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.number_sold</code>.
     */
    public final TableField<WishProductRecord, Integer> NUMBER_SOLD = createField("number_sold", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.parent_sku</code>.
     */
    public final TableField<WishProductRecord, String> PARENT_SKU = createField("parent_sku", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.date_uploaded</code>.
     */
    public final TableField<WishProductRecord, Timestamp> DATE_UPLOADED = createField("date_uploaded", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.description</code>.
     */
    public final TableField<WishProductRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.tags</code>.
     */
    public final TableField<WishProductRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(3000), this, "");

    /**
     * The column <code>wish.wish_product.country_shippings</code>.
     */
    public final TableField<WishProductRecord, String> COUNTRY_SHIPPINGS = createField("country_shippings", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>wish.wish_product.authCode</code>.
     */
    public final TableField<WishProductRecord, String> AUTHCODE = createField("authCode", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>wish.wish_product.create_date</code>.
     */
    public final TableField<WishProductRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>wish.wish_product</code> table reference
     */
    public WishProduct() {
        this(DSL.name("wish_product"), null);
    }

    /**
     * Create an aliased <code>wish.wish_product</code> table reference
     */
    public WishProduct(String alias) {
        this(DSL.name(alias), WISH_PRODUCT);
    }

    /**
     * Create an aliased <code>wish.wish_product</code> table reference
     */
    public WishProduct(Name alias) {
        this(alias, WISH_PRODUCT);
    }

    private WishProduct(Name alias, Table<WishProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private WishProduct(Name alias, Table<WishProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WISH_PRODUCT_1, Indexes.WISH_PRODUCT_DATE_UPLOADED, Indexes.WISH_PRODUCT_ID, Indexes.WISH_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WishProductRecord> getPrimaryKey() {
        return Keys.KEY_WISH_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WishProductRecord>> getKeys() {
        return Arrays.<UniqueKey<WishProductRecord>>asList(Keys.KEY_WISH_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishProduct as(String alias) {
        return new WishProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishProduct as(Name alias) {
        return new WishProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WishProduct rename(String name) {
        return new WishProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WishProduct rename(Name name) {
        return new WishProduct(name, null);
    }
}
