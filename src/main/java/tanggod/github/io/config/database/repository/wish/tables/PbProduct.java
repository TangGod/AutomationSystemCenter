/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.PbProductRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PbProduct extends TableImpl<PbProductRecord> {

    private static final long serialVersionUID = -1650489719;

    /**
     * The reference instance of <code>wish.pb_product</code>
     */
    public static final PbProduct PB_PRODUCT = new PbProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PbProductRecord> getRecordType() {
        return PbProductRecord.class;
    }

    /**
     * The column <code>wish.pb_product.id</code>.
     */
    public final TableField<PbProductRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.pb_product.parentSku</code>.
     */
    public final TableField<PbProductRecord, String> PARENTSKU = createField("parentSku", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.pb_product.pbTags</code>.
     */
    public final TableField<PbProductRecord, String> PBTAGS = createField("pbTags", org.jooq.impl.SQLDataType.VARCHAR(10000), this, "");

    /**
     * The column <code>wish.pb_product.sort</code>.
     */
    public final TableField<PbProductRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1000000", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>wish.pb_product.imageurl</code>.
     */
    public final TableField<PbProductRecord, String> IMAGEURL = createField("imageurl", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * Create a <code>wish.pb_product</code> table reference
     */
    public PbProduct() {
        this(DSL.name("pb_product"), null);
    }

    /**
     * Create an aliased <code>wish.pb_product</code> table reference
     */
    public PbProduct(String alias) {
        this(DSL.name(alias), PB_PRODUCT);
    }

    /**
     * Create an aliased <code>wish.pb_product</code> table reference
     */
    public PbProduct(Name alias) {
        this(alias, PB_PRODUCT);
    }

    private PbProduct(Name alias, Table<PbProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private PbProduct(Name alias, Table<PbProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PB_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PbProductRecord> getPrimaryKey() {
        return Keys.KEY_PB_PRODUCT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PbProductRecord>> getKeys() {
        return Arrays.<UniqueKey<PbProductRecord>>asList(Keys.KEY_PB_PRODUCT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PbProduct as(String alias) {
        return new PbProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PbProduct as(Name alias) {
        return new PbProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PbProduct rename(String name) {
        return new PbProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PbProduct rename(Name name) {
        return new PbProduct(name, null);
    }
}
