/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductSalesMonitorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductSalesMonitor extends TableImpl<ProductSalesMonitorRecord> {

    private static final long serialVersionUID = 1369927224;

    /**
     * The reference instance of <code>wish.product_sales_monitor</code>
     */
    public static final ProductSalesMonitor PRODUCT_SALES_MONITOR = new ProductSalesMonitor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductSalesMonitorRecord> getRecordType() {
        return ProductSalesMonitorRecord.class;
    }

    /**
     * The column <code>wish.product_sales_monitor.id</code>.
     */
    public final TableField<ProductSalesMonitorRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.product_id</code>.
     */
    public final TableField<ProductSalesMonitorRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.shop</code>.
     */
    public final TableField<ProductSalesMonitorRecord, String> SHOP = createField("shop", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.num</code>.
     */
    public final TableField<ProductSalesMonitorRecord, Integer> NUM = createField("num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.image_src</code>.
     */
    public final TableField<ProductSalesMonitorRecord, String> IMAGE_SRC = createField("image_src", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.parent_sku</code>.
     */
    public final TableField<ProductSalesMonitorRecord, String> PARENT_SKU = createField("parent_sku", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.create_date</code>.
     */
    public final TableField<ProductSalesMonitorRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.shelf_date</code>.
     */
    public final TableField<ProductSalesMonitorRecord, Timestamp> SHELF_DATE = createField("shelf_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish.product_sales_monitor.sales_num</code>.
     */
    public final TableField<ProductSalesMonitorRecord, Integer> SALES_NUM = createField("sales_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>wish.product_sales_monitor</code> table reference
     */
    public ProductSalesMonitor() {
        this(DSL.name("product_sales_monitor"), null);
    }

    /**
     * Create an aliased <code>wish.product_sales_monitor</code> table reference
     */
    public ProductSalesMonitor(String alias) {
        this(DSL.name(alias), PRODUCT_SALES_MONITOR);
    }

    /**
     * Create an aliased <code>wish.product_sales_monitor</code> table reference
     */
    public ProductSalesMonitor(Name alias) {
        this(alias, PRODUCT_SALES_MONITOR);
    }

    private ProductSalesMonitor(Name alias, Table<ProductSalesMonitorRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductSalesMonitor(Name alias, Table<ProductSalesMonitorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCT_SALES_MONITOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductSalesMonitorRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_SALES_MONITOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductSalesMonitorRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductSalesMonitorRecord>>asList(Keys.KEY_PRODUCT_SALES_MONITOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductSalesMonitor as(String alias) {
        return new ProductSalesMonitor(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductSalesMonitor as(Name alias) {
        return new ProductSalesMonitor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductSalesMonitor rename(String name) {
        return new ProductSalesMonitor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductSalesMonitor rename(Name name) {
        return new ProductSalesMonitor(name, null);
    }
}
