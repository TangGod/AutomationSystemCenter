/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.CostPbCostRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostPbCost extends TableImpl<CostPbCostRecord> {

    private static final long serialVersionUID = 1107105457;

    /**
     * The reference instance of <code>wish.cost_pb_cost</code>
     */
    public static final CostPbCost COST_PB_COST = new CostPbCost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CostPbCostRecord> getRecordType() {
        return CostPbCostRecord.class;
    }

    /**
     * The column <code>wish.cost_pb_cost.id</code>.
     */
    public final TableField<CostPbCostRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.currentPbDate</code>.
     */
    public final TableField<CostPbCostRecord, String> CURRENTPBDATE = createField("currentPbDate", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.totalOrder</code>.
     */
    public final TableField<CostPbCostRecord, Double> TOTALORDER = createField("totalOrder", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.totalTurnover</code>.
     */
    public final TableField<CostPbCostRecord, Double> TOTALTURNOVER = createField("totalTurnover", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.wishCoat</code>.
     */
    public final TableField<CostPbCostRecord, Double> WISHCOAT = createField("wishCoat", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.systemCoat</code>.
     */
    public final TableField<CostPbCostRecord, Double> SYSTEMCOAT = createField("systemCoat", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.dianXiaoMiPBId</code>.
     */
    public final TableField<CostPbCostRecord, String> DIANXIAOMIPBID = createField("dianXiaoMiPBId", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.totalCost</code>.
     */
    public final TableField<CostPbCostRecord, Double> TOTALCOST = createField("totalCost", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>wish.cost_pb_cost.createDate</code>.
     */
    public final TableField<CostPbCostRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>wish.cost_pb_cost</code> table reference
     */
    public CostPbCost() {
        this(DSL.name("cost_pb_cost"), null);
    }

    /**
     * Create an aliased <code>wish.cost_pb_cost</code> table reference
     */
    public CostPbCost(String alias) {
        this(DSL.name(alias), COST_PB_COST);
    }

    /**
     * Create an aliased <code>wish.cost_pb_cost</code> table reference
     */
    public CostPbCost(Name alias) {
        this(alias, COST_PB_COST);
    }

    private CostPbCost(Name alias, Table<CostPbCostRecord> aliased) {
        this(alias, aliased, null);
    }

    private CostPbCost(Name alias, Table<CostPbCostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COST_PB_COST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CostPbCostRecord> getPrimaryKey() {
        return Keys.KEY_COST_PB_COST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CostPbCostRecord>> getKeys() {
        return Arrays.<UniqueKey<CostPbCostRecord>>asList(Keys.KEY_COST_PB_COST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostPbCost as(String alias) {
        return new CostPbCost(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostPbCost as(Name alias) {
        return new CostPbCost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CostPbCost rename(String name) {
        return new CostPbCost(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CostPbCost rename(Name name) {
        return new CostPbCost(name, null);
    }
}
