/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.user.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.user.Indexes;
import tanggod.github.io.config.database.repository.user.Keys;
import tanggod.github.io.config.database.repository.user.User;
import tanggod.github.io.config.database.repository.user.tables.records.SystemUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemUser extends TableImpl<SystemUserRecord> {

    private static final long serialVersionUID = 2020818185;

    /**
     * The reference instance of <code>user.system_user</code>
     */
    public static final SystemUser SYSTEM_USER = new SystemUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemUserRecord> getRecordType() {
        return SystemUserRecord.class;
    }

    /**
     * The column <code>user.system_user.user_id</code>.
     */
    public final TableField<SystemUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>user.system_user.user_name</code>.
     */
    public final TableField<SystemUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>user.system_user.password</code>.
     */
    public final TableField<SystemUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>user.system_user.permission</code>.
     */
    public final TableField<SystemUserRecord, Boolean> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>user.system_user.shop_auth_code</code>.
     */
    public final TableField<SystemUserRecord, String> SHOP_AUTH_CODE = createField("shop_auth_code", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "");

    /**
     * Create a <code>user.system_user</code> table reference
     */
    public SystemUser() {
        this(DSL.name("system_user"), null);
    }

    /**
     * Create an aliased <code>user.system_user</code> table reference
     */
    public SystemUser(String alias) {
        this(DSL.name(alias), SYSTEM_USER);
    }

    /**
     * Create an aliased <code>user.system_user</code> table reference
     */
    public SystemUser(Name alias) {
        this(alias, SYSTEM_USER);
    }

    private SystemUser(Name alias, Table<SystemUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemUser(Name alias, Table<SystemUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return User.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYSTEM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SystemUserRecord> getPrimaryKey() {
        return Keys.KEY_SYSTEM_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SystemUserRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemUserRecord>>asList(Keys.KEY_SYSTEM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemUser as(String alias) {
        return new SystemUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemUser as(Name alias) {
        return new SystemUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemUser rename(String name) {
        return new SystemUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemUser rename(Name name) {
        return new SystemUser(name, null);
    }
}
