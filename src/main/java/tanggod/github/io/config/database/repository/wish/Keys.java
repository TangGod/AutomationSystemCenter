/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish;


import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import tanggod.github.io.config.database.repository.wish.tables.Announcement;
import tanggod.github.io.config.database.repository.wish.tables.CategoryData;
import tanggod.github.io.config.database.repository.wish.tables.CategoryDataDataAnalysis;
import tanggod.github.io.config.database.repository.wish.tables.CategoryDataDataAnalysisSync;
import tanggod.github.io.config.database.repository.wish.tables.CategoryDataPermission;
import tanggod.github.io.config.database.repository.wish.tables.CategoryDataRequestCode;
import tanggod.github.io.config.database.repository.wish.tables.CollectionDataFilter;
import tanggod.github.io.config.database.repository.wish.tables.CollectionDataParameter;
import tanggod.github.io.config.database.repository.wish.tables.CollectionDataUser;
import tanggod.github.io.config.database.repository.wish.tables.CostPbCost;
import tanggod.github.io.config.database.repository.wish.tables.CostPbDianxiaomi;
import tanggod.github.io.config.database.repository.wish.tables.CostTotal;
import tanggod.github.io.config.database.repository.wish.tables.Customizeinfo;
import tanggod.github.io.config.database.repository.wish.tables.Customizeproduct;
import tanggod.github.io.config.database.repository.wish.tables.DesktopApplication;
import tanggod.github.io.config.database.repository.wish.tables.JieZiManCookie;
import tanggod.github.io.config.database.repository.wish.tables.JzmPurchaseOrder;
import tanggod.github.io.config.database.repository.wish.tables.JzmWarehouseOrderCode;
import tanggod.github.io.config.database.repository.wish.tables.JzmWishUser;
import tanggod.github.io.config.database.repository.wish.tables.OperationHistory;
import tanggod.github.io.config.database.repository.wish.tables.PbProduct;
import tanggod.github.io.config.database.repository.wish.tables.ProductBoostTemplateProduct;
import tanggod.github.io.config.database.repository.wish.tables.ProductBoostTemplateRecord;
import tanggod.github.io.config.database.repository.wish.tables.ProductBoostTemplateUser;
import tanggod.github.io.config.database.repository.wish.tables.ProductInventoryAddRecord;
import tanggod.github.io.config.database.repository.wish.tables.ProductPriceTrackingTemplate;
import tanggod.github.io.config.database.repository.wish.tables.ProductSalesMonitor;
import tanggod.github.io.config.database.repository.wish.tables.Productinfo;
import tanggod.github.io.config.database.repository.wish.tables.SkuFile;
import tanggod.github.io.config.database.repository.wish.tables.SkuImage;
import tanggod.github.io.config.database.repository.wish.tables.SmsRecord;
import tanggod.github.io.config.database.repository.wish.tables.SmsVerificationCode;
import tanggod.github.io.config.database.repository.wish.tables.Taskrecord;
import tanggod.github.io.config.database.repository.wish.tables.TiktokOrder;
import tanggod.github.io.config.database.repository.wish.tables.User;
import tanggod.github.io.config.database.repository.wish.tables.WebsiteAddress;
import tanggod.github.io.config.database.repository.wish.tables.WebsiteTask;
import tanggod.github.io.config.database.repository.wish.tables.WishAuth;
import tanggod.github.io.config.database.repository.wish.tables.WishCategory;
import tanggod.github.io.config.database.repository.wish.tables.WishCvsRecord;
import tanggod.github.io.config.database.repository.wish.tables.WishKeywordSearch;
import tanggod.github.io.config.database.repository.wish.tables.WishProduct;
import tanggod.github.io.config.database.repository.wish.tables.WishProductBoostDetail;
import tanggod.github.io.config.database.repository.wish.tables.WishProductNumberSold;
import tanggod.github.io.config.database.repository.wish.tables.WishProductSalesMonitorData;
import tanggod.github.io.config.database.repository.wish.tables.WishProductSalesMonitorUser;
import tanggod.github.io.config.database.repository.wish.tables.WishSoldDate;
import tanggod.github.io.config.database.repository.wish.tables.WishStockAutomation;
import tanggod.github.io.config.database.repository.wish.tables.WishUser;
import tanggod.github.io.config.database.repository.wish.tables.WishVariant;
import tanggod.github.io.config.database.repository.wish.tables.WishWebCookie;
import tanggod.github.io.config.database.repository.wish.tables.records.AnnouncementRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataDataAnalysisRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataDataAnalysisSyncRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataPermissionRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CategoryDataRequestCodeRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CollectionDataFilterRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CollectionDataParameterRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CollectionDataUserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CostPbCostRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CostPbDianxiaomiRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CostTotalRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CustomizeinfoRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.CustomizeproductRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.DesktopApplicationRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.JieZiManCookieRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.JzmPurchaseOrderRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.JzmWarehouseOrderCodeRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.JzmWishUserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.OperationHistoryRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.PbProductRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductBoostTemplateProductRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductBoostTemplateRecordRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductBoostTemplateUserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductInventoryAddRecordRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductPriceTrackingTemplateRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductSalesMonitorRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.ProductinfoRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.SkuFileRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.SkuImageRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.SmsRecordRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.SmsVerificationCodeRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.TaskrecordRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.TiktokOrderRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.UserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WebsiteAddressRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WebsiteTaskRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishAuthRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishCategoryRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishCvsRecordRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishKeywordSearchRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductBoostDetailRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductNumberSoldRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductSalesMonitorDataRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishProductSalesMonitorUserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishSoldDateRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishStockAutomationRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishUserRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishVariantRecord;
import tanggod.github.io.config.database.repository.wish.tables.records.WishWebCookieRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>wish</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnnouncementRecord> KEY_ANNOUNCEMENT_PRIMARY = UniqueKeys0.KEY_ANNOUNCEMENT_PRIMARY;
    public static final UniqueKey<CategoryDataRecord> KEY_CATEGORY_DATA_PRIMARY = UniqueKeys0.KEY_CATEGORY_DATA_PRIMARY;
    public static final UniqueKey<CategoryDataDataAnalysisRecord> KEY_CATEGORY_DATA_DATA_ANALYSIS_PRIMARY = UniqueKeys0.KEY_CATEGORY_DATA_DATA_ANALYSIS_PRIMARY;
    public static final UniqueKey<CategoryDataDataAnalysisSyncRecord> KEY_CATEGORY_DATA_DATA_ANALYSIS_SYNC_PRIMARY = UniqueKeys0.KEY_CATEGORY_DATA_DATA_ANALYSIS_SYNC_PRIMARY;
    public static final UniqueKey<CategoryDataPermissionRecord> KEY_CATEGORY_DATA_PERMISSION_PRIMARY = UniqueKeys0.KEY_CATEGORY_DATA_PERMISSION_PRIMARY;
    public static final UniqueKey<CategoryDataRequestCodeRecord> KEY_CATEGORY_DATA_REQUEST_CODE_PRIMARY = UniqueKeys0.KEY_CATEGORY_DATA_REQUEST_CODE_PRIMARY;
    public static final UniqueKey<CollectionDataFilterRecord> KEY_COLLECTION_DATA_FILTER_PRIMARY = UniqueKeys0.KEY_COLLECTION_DATA_FILTER_PRIMARY;
    public static final UniqueKey<CollectionDataParameterRecord> KEY_COLLECTION_DATA_PARAMETER_PRIMARY = UniqueKeys0.KEY_COLLECTION_DATA_PARAMETER_PRIMARY;
    public static final UniqueKey<CollectionDataUserRecord> KEY_COLLECTION_DATA_USER_PRIMARY = UniqueKeys0.KEY_COLLECTION_DATA_USER_PRIMARY;
    public static final UniqueKey<CostPbCostRecord> KEY_COST_PB_COST_PRIMARY = UniqueKeys0.KEY_COST_PB_COST_PRIMARY;
    public static final UniqueKey<CostPbDianxiaomiRecord> KEY_COST_PB_DIANXIAOMI_PRIMARY = UniqueKeys0.KEY_COST_PB_DIANXIAOMI_PRIMARY;
    public static final UniqueKey<CostTotalRecord> KEY_COST_TOTAL_PRIMARY = UniqueKeys0.KEY_COST_TOTAL_PRIMARY;
    public static final UniqueKey<CustomizeinfoRecord> KEY_CUSTOMIZEINFO_PRIMARY = UniqueKeys0.KEY_CUSTOMIZEINFO_PRIMARY;
    public static final UniqueKey<CustomizeproductRecord> KEY_CUSTOMIZEPRODUCT_PRIMARY = UniqueKeys0.KEY_CUSTOMIZEPRODUCT_PRIMARY;
    public static final UniqueKey<DesktopApplicationRecord> KEY_DESKTOP_APPLICATION_PRIMARY = UniqueKeys0.KEY_DESKTOP_APPLICATION_PRIMARY;
    public static final UniqueKey<JieZiManCookieRecord> KEY_JIE_ZI_MAN_COOKIE_PRIMARY = UniqueKeys0.KEY_JIE_ZI_MAN_COOKIE_PRIMARY;
    public static final UniqueKey<JzmPurchaseOrderRecord> KEY_JZM_PURCHASE_ORDER_PRIMARY = UniqueKeys0.KEY_JZM_PURCHASE_ORDER_PRIMARY;
    public static final UniqueKey<JzmWarehouseOrderCodeRecord> KEY_JZM_WAREHOUSE_ORDER_CODE_PRIMARY = UniqueKeys0.KEY_JZM_WAREHOUSE_ORDER_CODE_PRIMARY;
    public static final UniqueKey<JzmWishUserRecord> KEY_JZM_WISH_USER_PRIMARY = UniqueKeys0.KEY_JZM_WISH_USER_PRIMARY;
    public static final UniqueKey<OperationHistoryRecord> KEY_OPERATION_HISTORY_PRIMARY = UniqueKeys0.KEY_OPERATION_HISTORY_PRIMARY;
    public static final UniqueKey<PbProductRecord> KEY_PB_PRODUCT_PRIMARY = UniqueKeys0.KEY_PB_PRODUCT_PRIMARY;
    public static final UniqueKey<ProductinfoRecord> KEY_PRODUCTINFO_PRIMARY = UniqueKeys0.KEY_PRODUCTINFO_PRIMARY;
    public static final UniqueKey<ProductBoostTemplateProductRecord> KEY_PRODUCT_BOOST_TEMPLATE_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_BOOST_TEMPLATE_PRODUCT_PRIMARY;
    public static final UniqueKey<ProductBoostTemplateRecordRecord> KEY_PRODUCT_BOOST_TEMPLATE_RECORD_PRIMARY = UniqueKeys0.KEY_PRODUCT_BOOST_TEMPLATE_RECORD_PRIMARY;
    public static final UniqueKey<ProductBoostTemplateUserRecord> KEY_PRODUCT_BOOST_TEMPLATE_USER_PRIMARY = UniqueKeys0.KEY_PRODUCT_BOOST_TEMPLATE_USER_PRIMARY;
    public static final UniqueKey<ProductInventoryAddRecordRecord> KEY_PRODUCT_INVENTORY_ADD_RECORD_PRIMARY = UniqueKeys0.KEY_PRODUCT_INVENTORY_ADD_RECORD_PRIMARY;
    public static final UniqueKey<ProductPriceTrackingTemplateRecord> KEY_PRODUCT_PRICE_TRACKING_TEMPLATE_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRICE_TRACKING_TEMPLATE_PRIMARY;
    public static final UniqueKey<ProductSalesMonitorRecord> KEY_PRODUCT_SALES_MONITOR_PRIMARY = UniqueKeys0.KEY_PRODUCT_SALES_MONITOR_PRIMARY;
    public static final UniqueKey<SkuFileRecord> KEY_SKU_FILE_PRIMARY = UniqueKeys0.KEY_SKU_FILE_PRIMARY;
    public static final UniqueKey<SkuImageRecord> KEY_SKU_IMAGE_PRIMARY = UniqueKeys0.KEY_SKU_IMAGE_PRIMARY;
    public static final UniqueKey<SmsRecordRecord> KEY_SMS_RECORD_PRIMARY = UniqueKeys0.KEY_SMS_RECORD_PRIMARY;
    public static final UniqueKey<SmsVerificationCodeRecord> KEY_SMS_VERIFICATION_CODE_PRIMARY = UniqueKeys0.KEY_SMS_VERIFICATION_CODE_PRIMARY;
    public static final UniqueKey<TaskrecordRecord> KEY_TASKRECORD_PRIMARY = UniqueKeys0.KEY_TASKRECORD_PRIMARY;
    public static final UniqueKey<TiktokOrderRecord> KEY_TIKTOK_ORDER_PRIMARY = UniqueKeys0.KEY_TIKTOK_ORDER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<WebsiteAddressRecord> KEY_WEBSITE_ADDRESS_PRIMARY = UniqueKeys0.KEY_WEBSITE_ADDRESS_PRIMARY;
    public static final UniqueKey<WebsiteTaskRecord> KEY_WEBSITE_TASK_PRIMARY = UniqueKeys0.KEY_WEBSITE_TASK_PRIMARY;
    public static final UniqueKey<WishAuthRecord> KEY_WISH_AUTH_PRIMARY = UniqueKeys0.KEY_WISH_AUTH_PRIMARY;
    public static final UniqueKey<WishCategoryRecord> KEY_WISH_CATEGORY_PRIMARY = UniqueKeys0.KEY_WISH_CATEGORY_PRIMARY;
    public static final UniqueKey<WishCvsRecordRecord> KEY_WISH_CVS_RECORD_PRIMARY = UniqueKeys0.KEY_WISH_CVS_RECORD_PRIMARY;
    public static final UniqueKey<WishKeywordSearchRecord> KEY_WISH_KEYWORD_SEARCH_PRIMARY = UniqueKeys0.KEY_WISH_KEYWORD_SEARCH_PRIMARY;
    public static final UniqueKey<WishProductRecord> KEY_WISH_PRODUCT_PRIMARY = UniqueKeys0.KEY_WISH_PRODUCT_PRIMARY;
    public static final UniqueKey<WishProductBoostDetailRecord> KEY_WISH_PRODUCT_BOOST_DETAIL_PRIMARY = UniqueKeys0.KEY_WISH_PRODUCT_BOOST_DETAIL_PRIMARY;
    public static final UniqueKey<WishProductNumberSoldRecord> KEY_WISH_PRODUCT_NUMBER_SOLD_PRIMARY = UniqueKeys0.KEY_WISH_PRODUCT_NUMBER_SOLD_PRIMARY;
    public static final UniqueKey<WishProductSalesMonitorDataRecord> KEY_WISH_PRODUCT_SALES_MONITOR_DATA_PRIMARY = UniqueKeys0.KEY_WISH_PRODUCT_SALES_MONITOR_DATA_PRIMARY;
    public static final UniqueKey<WishProductSalesMonitorUserRecord> KEY_WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY = UniqueKeys0.KEY_WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY;
    public static final UniqueKey<WishSoldDateRecord> KEY_WISH_SOLD_DATE_PRIMARY = UniqueKeys0.KEY_WISH_SOLD_DATE_PRIMARY;
    public static final UniqueKey<WishStockAutomationRecord> KEY_WISH_STOCK_AUTOMATION_PRIMARY = UniqueKeys0.KEY_WISH_STOCK_AUTOMATION_PRIMARY;
    public static final UniqueKey<WishUserRecord> KEY_WISH_USER_PRIMARY = UniqueKeys0.KEY_WISH_USER_PRIMARY;
    public static final UniqueKey<WishVariantRecord> KEY_WISH_VARIANT_PRIMARY = UniqueKeys0.KEY_WISH_VARIANT_PRIMARY;
    public static final UniqueKey<WishWebCookieRecord> KEY_WISH_WEB_COOKIE_PRIMARY = UniqueKeys0.KEY_WISH_WEB_COOKIE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AnnouncementRecord> KEY_ANNOUNCEMENT_PRIMARY = Internal.createUniqueKey(Announcement.ANNOUNCEMENT, "KEY_announcement_PRIMARY", Announcement.ANNOUNCEMENT.ID);
        public static final UniqueKey<CategoryDataRecord> KEY_CATEGORY_DATA_PRIMARY = Internal.createUniqueKey(CategoryData.CATEGORY_DATA, "KEY_category_data_PRIMARY", CategoryData.CATEGORY_DATA.ID);
        public static final UniqueKey<CategoryDataDataAnalysisRecord> KEY_CATEGORY_DATA_DATA_ANALYSIS_PRIMARY = Internal.createUniqueKey(CategoryDataDataAnalysis.CATEGORY_DATA_DATA_ANALYSIS, "KEY_category_data_data_analysis_PRIMARY", CategoryDataDataAnalysis.CATEGORY_DATA_DATA_ANALYSIS.ID);
        public static final UniqueKey<CategoryDataDataAnalysisSyncRecord> KEY_CATEGORY_DATA_DATA_ANALYSIS_SYNC_PRIMARY = Internal.createUniqueKey(CategoryDataDataAnalysisSync.CATEGORY_DATA_DATA_ANALYSIS_SYNC, "KEY_category_data_data_analysis_sync_PRIMARY", CategoryDataDataAnalysisSync.CATEGORY_DATA_DATA_ANALYSIS_SYNC.ID);
        public static final UniqueKey<CategoryDataPermissionRecord> KEY_CATEGORY_DATA_PERMISSION_PRIMARY = Internal.createUniqueKey(CategoryDataPermission.CATEGORY_DATA_PERMISSION, "KEY_category_data_permission_PRIMARY", CategoryDataPermission.CATEGORY_DATA_PERMISSION.ID);
        public static final UniqueKey<CategoryDataRequestCodeRecord> KEY_CATEGORY_DATA_REQUEST_CODE_PRIMARY = Internal.createUniqueKey(CategoryDataRequestCode.CATEGORY_DATA_REQUEST_CODE, "KEY_category_data_request_code_PRIMARY", CategoryDataRequestCode.CATEGORY_DATA_REQUEST_CODE.ID);
        public static final UniqueKey<CollectionDataFilterRecord> KEY_COLLECTION_DATA_FILTER_PRIMARY = Internal.createUniqueKey(CollectionDataFilter.COLLECTION_DATA_FILTER, "KEY_collection_data_filter_PRIMARY", CollectionDataFilter.COLLECTION_DATA_FILTER.ID);
        public static final UniqueKey<CollectionDataParameterRecord> KEY_COLLECTION_DATA_PARAMETER_PRIMARY = Internal.createUniqueKey(CollectionDataParameter.COLLECTION_DATA_PARAMETER, "KEY_collection_data_parameter_PRIMARY", CollectionDataParameter.COLLECTION_DATA_PARAMETER.ID);
        public static final UniqueKey<CollectionDataUserRecord> KEY_COLLECTION_DATA_USER_PRIMARY = Internal.createUniqueKey(CollectionDataUser.COLLECTION_DATA_USER, "KEY_collection_data_user_PRIMARY", CollectionDataUser.COLLECTION_DATA_USER.ID);
        public static final UniqueKey<CostPbCostRecord> KEY_COST_PB_COST_PRIMARY = Internal.createUniqueKey(CostPbCost.COST_PB_COST, "KEY_cost_pb_cost_PRIMARY", CostPbCost.COST_PB_COST.ID);
        public static final UniqueKey<CostPbDianxiaomiRecord> KEY_COST_PB_DIANXIAOMI_PRIMARY = Internal.createUniqueKey(CostPbDianxiaomi.COST_PB_DIANXIAOMI, "KEY_cost_pb_dianxiaomi_PRIMARY", CostPbDianxiaomi.COST_PB_DIANXIAOMI.ID);
        public static final UniqueKey<CostTotalRecord> KEY_COST_TOTAL_PRIMARY = Internal.createUniqueKey(CostTotal.COST_TOTAL, "KEY_cost_total_PRIMARY", CostTotal.COST_TOTAL.ID);
        public static final UniqueKey<CustomizeinfoRecord> KEY_CUSTOMIZEINFO_PRIMARY = Internal.createUniqueKey(Customizeinfo.CUSTOMIZEINFO, "KEY_customizeInfo_PRIMARY", Customizeinfo.CUSTOMIZEINFO.ID);
        public static final UniqueKey<CustomizeproductRecord> KEY_CUSTOMIZEPRODUCT_PRIMARY = Internal.createUniqueKey(Customizeproduct.CUSTOMIZEPRODUCT, "KEY_customizeProduct_PRIMARY", Customizeproduct.CUSTOMIZEPRODUCT.ID);
        public static final UniqueKey<DesktopApplicationRecord> KEY_DESKTOP_APPLICATION_PRIMARY = Internal.createUniqueKey(DesktopApplication.DESKTOP_APPLICATION, "KEY_desktop_application_PRIMARY", DesktopApplication.DESKTOP_APPLICATION.ID);
        public static final UniqueKey<JieZiManCookieRecord> KEY_JIE_ZI_MAN_COOKIE_PRIMARY = Internal.createUniqueKey(JieZiManCookie.JIE_ZI_MAN_COOKIE, "KEY_jie_zi_man_cookie_PRIMARY", JieZiManCookie.JIE_ZI_MAN_COOKIE.ID);
        public static final UniqueKey<JzmPurchaseOrderRecord> KEY_JZM_PURCHASE_ORDER_PRIMARY = Internal.createUniqueKey(JzmPurchaseOrder.JZM_PURCHASE_ORDER, "KEY_jzm_purchase_order_PRIMARY", JzmPurchaseOrder.JZM_PURCHASE_ORDER.ID);
        public static final UniqueKey<JzmWarehouseOrderCodeRecord> KEY_JZM_WAREHOUSE_ORDER_CODE_PRIMARY = Internal.createUniqueKey(JzmWarehouseOrderCode.JZM_WAREHOUSE_ORDER_CODE, "KEY_jzm_warehouse_order_code_PRIMARY", JzmWarehouseOrderCode.JZM_WAREHOUSE_ORDER_CODE.WAREHOUSE_ORDER_CODE);
        public static final UniqueKey<JzmWishUserRecord> KEY_JZM_WISH_USER_PRIMARY = Internal.createUniqueKey(JzmWishUser.JZM_WISH_USER, "KEY_jzm_wish_user_PRIMARY", JzmWishUser.JZM_WISH_USER.ID);
        public static final UniqueKey<OperationHistoryRecord> KEY_OPERATION_HISTORY_PRIMARY = Internal.createUniqueKey(OperationHistory.OPERATION_HISTORY, "KEY_operation_history_PRIMARY", OperationHistory.OPERATION_HISTORY.ID);
        public static final UniqueKey<PbProductRecord> KEY_PB_PRODUCT_PRIMARY = Internal.createUniqueKey(PbProduct.PB_PRODUCT, "KEY_pb_product_PRIMARY", PbProduct.PB_PRODUCT.ID);
        public static final UniqueKey<ProductinfoRecord> KEY_PRODUCTINFO_PRIMARY = Internal.createUniqueKey(Productinfo.PRODUCTINFO, "KEY_productInfo_PRIMARY", Productinfo.PRODUCTINFO.ID);
        public static final UniqueKey<ProductBoostTemplateProductRecord> KEY_PRODUCT_BOOST_TEMPLATE_PRODUCT_PRIMARY = Internal.createUniqueKey(ProductBoostTemplateProduct.PRODUCT_BOOST_TEMPLATE_PRODUCT, "KEY_product_boost_template_product_PRIMARY", ProductBoostTemplateProduct.PRODUCT_BOOST_TEMPLATE_PRODUCT.ID);
        public static final UniqueKey<ProductBoostTemplateRecordRecord> KEY_PRODUCT_BOOST_TEMPLATE_RECORD_PRIMARY = Internal.createUniqueKey(ProductBoostTemplateRecord.PRODUCT_BOOST_TEMPLATE_RECORD, "KEY_product_boost_template_record_PRIMARY", ProductBoostTemplateRecord.PRODUCT_BOOST_TEMPLATE_RECORD.ID);
        public static final UniqueKey<ProductBoostTemplateUserRecord> KEY_PRODUCT_BOOST_TEMPLATE_USER_PRIMARY = Internal.createUniqueKey(ProductBoostTemplateUser.PRODUCT_BOOST_TEMPLATE_USER, "KEY_product_boost_template_user_PRIMARY", ProductBoostTemplateUser.PRODUCT_BOOST_TEMPLATE_USER.AUTH_CODE);
        public static final UniqueKey<ProductInventoryAddRecordRecord> KEY_PRODUCT_INVENTORY_ADD_RECORD_PRIMARY = Internal.createUniqueKey(ProductInventoryAddRecord.PRODUCT_INVENTORY_ADD_RECORD, "KEY_product_inventory_add_record_PRIMARY", ProductInventoryAddRecord.PRODUCT_INVENTORY_ADD_RECORD.ID, ProductInventoryAddRecord.PRODUCT_INVENTORY_ADD_RECORD.CREATE_DATE);
        public static final UniqueKey<ProductPriceTrackingTemplateRecord> KEY_PRODUCT_PRICE_TRACKING_TEMPLATE_PRIMARY = Internal.createUniqueKey(ProductPriceTrackingTemplate.PRODUCT_PRICE_TRACKING_TEMPLATE, "KEY_product_price_tracking_template_PRIMARY", ProductPriceTrackingTemplate.PRODUCT_PRICE_TRACKING_TEMPLATE.VARIATION_ID);
        public static final UniqueKey<ProductSalesMonitorRecord> KEY_PRODUCT_SALES_MONITOR_PRIMARY = Internal.createUniqueKey(ProductSalesMonitor.PRODUCT_SALES_MONITOR, "KEY_product_sales_monitor_PRIMARY", ProductSalesMonitor.PRODUCT_SALES_MONITOR.ID);
        public static final UniqueKey<SkuFileRecord> KEY_SKU_FILE_PRIMARY = Internal.createUniqueKey(SkuFile.SKU_FILE, "KEY_sku_file_PRIMARY", SkuFile.SKU_FILE.ID);
        public static final UniqueKey<SkuImageRecord> KEY_SKU_IMAGE_PRIMARY = Internal.createUniqueKey(SkuImage.SKU_IMAGE, "KEY_sku_image_PRIMARY", SkuImage.SKU_IMAGE.ID);
        public static final UniqueKey<SmsRecordRecord> KEY_SMS_RECORD_PRIMARY = Internal.createUniqueKey(SmsRecord.SMS_RECORD, "KEY_sms_record_PRIMARY", SmsRecord.SMS_RECORD.ID);
        public static final UniqueKey<SmsVerificationCodeRecord> KEY_SMS_VERIFICATION_CODE_PRIMARY = Internal.createUniqueKey(SmsVerificationCode.SMS_VERIFICATION_CODE, "KEY_sms_verification_code_PRIMARY", SmsVerificationCode.SMS_VERIFICATION_CODE.ID);
        public static final UniqueKey<TaskrecordRecord> KEY_TASKRECORD_PRIMARY = Internal.createUniqueKey(Taskrecord.TASKRECORD, "KEY_taskRecord_PRIMARY", Taskrecord.TASKRECORD.ID);
        public static final UniqueKey<TiktokOrderRecord> KEY_TIKTOK_ORDER_PRIMARY = Internal.createUniqueKey(TiktokOrder.TIKTOK_ORDER, "KEY_tikTok_order_PRIMARY", TiktokOrder.TIKTOK_ORDER.ORDER_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<WebsiteAddressRecord> KEY_WEBSITE_ADDRESS_PRIMARY = Internal.createUniqueKey(WebsiteAddress.WEBSITE_ADDRESS, "KEY_website_address_PRIMARY", WebsiteAddress.WEBSITE_ADDRESS.ID);
        public static final UniqueKey<WebsiteTaskRecord> KEY_WEBSITE_TASK_PRIMARY = Internal.createUniqueKey(WebsiteTask.WEBSITE_TASK, "KEY_website_task_PRIMARY", WebsiteTask.WEBSITE_TASK.ID);
        public static final UniqueKey<WishAuthRecord> KEY_WISH_AUTH_PRIMARY = Internal.createUniqueKey(WishAuth.WISH_AUTH, "KEY_wish_auth_PRIMARY", WishAuth.WISH_AUTH.ID);
        public static final UniqueKey<WishCategoryRecord> KEY_WISH_CATEGORY_PRIMARY = Internal.createUniqueKey(WishCategory.WISH_CATEGORY, "KEY_wish_category_PRIMARY", WishCategory.WISH_CATEGORY.ID);
        public static final UniqueKey<WishCvsRecordRecord> KEY_WISH_CVS_RECORD_PRIMARY = Internal.createUniqueKey(WishCvsRecord.WISH_CVS_RECORD, "KEY_wish_cvs_record_PRIMARY", WishCvsRecord.WISH_CVS_RECORD.JOB_ID);
        public static final UniqueKey<WishKeywordSearchRecord> KEY_WISH_KEYWORD_SEARCH_PRIMARY = Internal.createUniqueKey(WishKeywordSearch.WISH_KEYWORD_SEARCH, "KEY_wish_keyword_search_PRIMARY", WishKeywordSearch.WISH_KEYWORD_SEARCH.ID);
        public static final UniqueKey<WishProductRecord> KEY_WISH_PRODUCT_PRIMARY = Internal.createUniqueKey(WishProduct.WISH_PRODUCT, "KEY_wish_product_PRIMARY", WishProduct.WISH_PRODUCT.ID);
        public static final UniqueKey<WishProductBoostDetailRecord> KEY_WISH_PRODUCT_BOOST_DETAIL_PRIMARY = Internal.createUniqueKey(WishProductBoostDetail.WISH_PRODUCT_BOOST_DETAIL, "KEY_wish_product_boost_detail_PRIMARY", WishProductBoostDetail.WISH_PRODUCT_BOOST_DETAIL.ID);
        public static final UniqueKey<WishProductNumberSoldRecord> KEY_WISH_PRODUCT_NUMBER_SOLD_PRIMARY = Internal.createUniqueKey(WishProductNumberSold.WISH_PRODUCT_NUMBER_SOLD, "KEY_wish_product_number_sold_PRIMARY", WishProductNumberSold.WISH_PRODUCT_NUMBER_SOLD.ID);
        public static final UniqueKey<WishProductSalesMonitorDataRecord> KEY_WISH_PRODUCT_SALES_MONITOR_DATA_PRIMARY = Internal.createUniqueKey(WishProductSalesMonitorData.WISH_PRODUCT_SALES_MONITOR_DATA, "KEY_wish_product_sales_monitor_data_PRIMARY", WishProductSalesMonitorData.WISH_PRODUCT_SALES_MONITOR_DATA.ID, WishProductSalesMonitorData.WISH_PRODUCT_SALES_MONITOR_DATA.NUMBER_SOLD);
        public static final UniqueKey<WishProductSalesMonitorUserRecord> KEY_WISH_PRODUCT_SALES_MONITOR_USER_PRIMARY = Internal.createUniqueKey(WishProductSalesMonitorUser.WISH_PRODUCT_SALES_MONITOR_USER, "KEY_wish_product_sales_monitor_user_PRIMARY", WishProductSalesMonitorUser.WISH_PRODUCT_SALES_MONITOR_USER.ID);
        public static final UniqueKey<WishSoldDateRecord> KEY_WISH_SOLD_DATE_PRIMARY = Internal.createUniqueKey(WishSoldDate.WISH_SOLD_DATE, "KEY_wish_sold_date_PRIMARY", WishSoldDate.WISH_SOLD_DATE.ID);
        public static final UniqueKey<WishStockAutomationRecord> KEY_WISH_STOCK_AUTOMATION_PRIMARY = Internal.createUniqueKey(WishStockAutomation.WISH_STOCK_AUTOMATION, "KEY_wish_stock_automation_PRIMARY", WishStockAutomation.WISH_STOCK_AUTOMATION.PRODUCT_ID);
        public static final UniqueKey<WishUserRecord> KEY_WISH_USER_PRIMARY = Internal.createUniqueKey(WishUser.WISH_USER, "KEY_wish_user_PRIMARY", WishUser.WISH_USER.ID);
        public static final UniqueKey<WishVariantRecord> KEY_WISH_VARIANT_PRIMARY = Internal.createUniqueKey(WishVariant.WISH_VARIANT, "KEY_wish_variant_PRIMARY", WishVariant.WISH_VARIANT.ID);
        public static final UniqueKey<WishWebCookieRecord> KEY_WISH_WEB_COOKIE_PRIMARY = Internal.createUniqueKey(WishWebCookie.WISH_WEB_COOKIE, "KEY_wish_web_cookie_PRIMARY", WishWebCookie.WISH_WEB_COOKIE.ID);
    }
}
