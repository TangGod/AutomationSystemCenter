/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.dummy_data.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.dummy_data.DummyData;
import tanggod.github.io.config.database.repository.dummy_data.Indexes;
import tanggod.github.io.config.database.repository.dummy_data.Keys;
import tanggod.github.io.config.database.repository.dummy_data.tables.records.DummyUserInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DummyUserInfo extends TableImpl<DummyUserInfoRecord> {

    private static final long serialVersionUID = -1884965091;

    /**
     * The reference instance of <code>dummy_data.dummy_user_info</code>
     */
    public static final DummyUserInfo DUMMY_USER_INFO = new DummyUserInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DummyUserInfoRecord> getRecordType() {
        return DummyUserInfoRecord.class;
    }

    /**
     * The column <code>dummy_data.dummy_user_info.id</code>.
     */
    public final TableField<DummyUserInfoRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>dummy_data.dummy_user_info.user_name</code>.
     */
    public final TableField<DummyUserInfoRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>dummy_data.dummy_user_info.full_name</code>.
     */
    public final TableField<DummyUserInfoRecord, String> FULL_NAME = createField("full_name", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * Create a <code>dummy_data.dummy_user_info</code> table reference
     */
    public DummyUserInfo() {
        this(DSL.name("dummy_user_info"), null);
    }

    /**
     * Create an aliased <code>dummy_data.dummy_user_info</code> table reference
     */
    public DummyUserInfo(String alias) {
        this(DSL.name(alias), DUMMY_USER_INFO);
    }

    /**
     * Create an aliased <code>dummy_data.dummy_user_info</code> table reference
     */
    public DummyUserInfo(Name alias) {
        this(alias, DUMMY_USER_INFO);
    }

    private DummyUserInfo(Name alias, Table<DummyUserInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private DummyUserInfo(Name alias, Table<DummyUserInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DummyData.DUMMY_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DUMMY_USER_INFO_1, Indexes.DUMMY_USER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DummyUserInfoRecord> getPrimaryKey() {
        return Keys.KEY_DUMMY_USER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DummyUserInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<DummyUserInfoRecord>>asList(Keys.KEY_DUMMY_USER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DummyUserInfo as(String alias) {
        return new DummyUserInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DummyUserInfo as(Name alias) {
        return new DummyUserInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DummyUserInfo rename(String name) {
        return new DummyUserInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DummyUserInfo rename(Name name) {
        return new DummyUserInfo(name, null);
    }
}
