/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.user.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.user.Indexes;
import tanggod.github.io.config.database.repository.user.Keys;
import tanggod.github.io.config.database.repository.user.User;
import tanggod.github.io.config.database.repository.user.tables.records.PlatformUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlatformUser extends TableImpl<PlatformUserRecord> {

    private static final long serialVersionUID = 606123291;

    /**
     * The reference instance of <code>user.platform_user</code>
     */
    public static final PlatformUser PLATFORM_USER = new PlatformUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlatformUserRecord> getRecordType() {
        return PlatformUserRecord.class;
    }

    /**
     * The column <code>user.platform_user.id</code>.
     */
    public final TableField<PlatformUserRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>user.platform_user.account</code>.
     */
    public final TableField<PlatformUserRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>user.platform_user.password</code>.
     */
    public final TableField<PlatformUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>user.platform_user.platform_name</code>.
     */
    public final TableField<PlatformUserRecord, String> PLATFORM_NAME = createField("platform_name", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>user.platform_user.platform_login_url</code>.
     */
    public final TableField<PlatformUserRecord, String> PLATFORM_LOGIN_URL = createField("platform_login_url", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * Create a <code>user.platform_user</code> table reference
     */
    public PlatformUser() {
        this(DSL.name("platform_user"), null);
    }

    /**
     * Create an aliased <code>user.platform_user</code> table reference
     */
    public PlatformUser(String alias) {
        this(DSL.name(alias), PLATFORM_USER);
    }

    /**
     * Create an aliased <code>user.platform_user</code> table reference
     */
    public PlatformUser(Name alias) {
        this(alias, PLATFORM_USER);
    }

    private PlatformUser(Name alias, Table<PlatformUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlatformUser(Name alias, Table<PlatformUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return User.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLATFORM_USER_1, Indexes.PLATFORM_USER_2, Indexes.PLATFORM_USER_3, Indexes.PLATFORM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlatformUserRecord> getPrimaryKey() {
        return Keys.KEY_PLATFORM_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlatformUserRecord>> getKeys() {
        return Arrays.<UniqueKey<PlatformUserRecord>>asList(Keys.KEY_PLATFORM_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlatformUser as(String alias) {
        return new PlatformUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlatformUser as(Name alias) {
        return new PlatformUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PlatformUser rename(String name) {
        return new PlatformUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PlatformUser rename(Name name) {
        return new PlatformUser(name, null);
    }
}
