/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.CollectionDataParameterRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionDataParameter extends TableImpl<CollectionDataParameterRecord> {

    private static final long serialVersionUID = -150726640;

    /**
     * The reference instance of <code>wish.collection_data_parameter</code>
     */
    public static final CollectionDataParameter COLLECTION_DATA_PARAMETER = new CollectionDataParameter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CollectionDataParameterRecord> getRecordType() {
        return CollectionDataParameterRecord.class;
    }

    /**
     * The column <code>wish.collection_data_parameter.id</code>.
     */
    public final TableField<CollectionDataParameterRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>wish.collection_data_parameter.productId</code>. 产品id
     */
    public final TableField<CollectionDataParameterRecord, String> PRODUCTID = createField("productId", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "产品id");

    /**
     * The column <code>wish.collection_data_parameter.productSku</code>. 产品sku
     */
    public final TableField<CollectionDataParameterRecord, String> PRODUCTSKU = createField("productSku", org.jooq.impl.SQLDataType.VARCHAR(200), this, "产品sku");

    /**
     * The column <code>wish.collection_data_parameter.weight</code>. 产品重量
     */
    public final TableField<CollectionDataParameterRecord, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER, this, "产品重量");

    /**
     * The column <code>wish.collection_data_parameter.purchase_cost</code>. 采购成本
     */
    public final TableField<CollectionDataParameterRecord, Double> PURCHASE_COST = createField("purchase_cost", org.jooq.impl.SQLDataType.DOUBLE, this, "采购成本");

    /**
     * The column <code>wish.collection_data_parameter.factory_cost</code>. 工厂成本
     */
    public final TableField<CollectionDataParameterRecord, Double> FACTORY_COST = createField("factory_cost", org.jooq.impl.SQLDataType.DOUBLE, this, "工厂成本");

    /**
     * The column <code>wish.collection_data_parameter.wish_price</code>. wish售价
     */
    public final TableField<CollectionDataParameterRecord, Double> WISH_PRICE = createField("wish_price", org.jooq.impl.SQLDataType.DOUBLE, this, "wish售价");

    /**
     * The column <code>wish.collection_data_parameter.profit_rmb</code>. rmb利润
     */
    public final TableField<CollectionDataParameterRecord, Double> PROFIT_RMB = createField("profit_rmb", org.jooq.impl.SQLDataType.DOUBLE, this, "rmb利润");

    /**
     * The column <code>wish.collection_data_parameter.productboost_cost</code>. 活动花费
     */
    public final TableField<CollectionDataParameterRecord, Double> PRODUCTBOOST_COST = createField("productboost_cost", org.jooq.impl.SQLDataType.DOUBLE, this, "活动花费");

    /**
     * The column <code>wish.collection_data_parameter.remark</code>. 备注
     */
    public final TableField<CollectionDataParameterRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "备注");

    /**
     * The column <code>wish.collection_data_parameter.same_product</code>. 同款产品集合
     */
    public final TableField<CollectionDataParameterRecord, String> SAME_PRODUCT = createField("same_product", org.jooq.impl.SQLDataType.VARCHAR(10000), this, "同款产品集合");

    /**
     * The column <code>wish.collection_data_parameter.collection_data_user_id</code>. 采集系统用户id
     */
    public final TableField<CollectionDataParameterRecord, String> COLLECTION_DATA_USER_ID = createField("collection_data_user_id", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "采集系统用户id");

    /**
     * The column <code>wish.collection_data_parameter.create_date</code>.
     */
    public final TableField<CollectionDataParameterRecord, Timestamp> CREATE_DATE = createField("create_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>wish.collection_data_parameter.update_date</code>.
     */
    public final TableField<CollectionDataParameterRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>wish.collection_data_parameter</code> table reference
     */
    public CollectionDataParameter() {
        this(DSL.name("collection_data_parameter"), null);
    }

    /**
     * Create an aliased <code>wish.collection_data_parameter</code> table reference
     */
    public CollectionDataParameter(String alias) {
        this(DSL.name(alias), COLLECTION_DATA_PARAMETER);
    }

    /**
     * Create an aliased <code>wish.collection_data_parameter</code> table reference
     */
    public CollectionDataParameter(Name alias) {
        this(alias, COLLECTION_DATA_PARAMETER);
    }

    private CollectionDataParameter(Name alias, Table<CollectionDataParameterRecord> aliased) {
        this(alias, aliased, null);
    }

    private CollectionDataParameter(Name alias, Table<CollectionDataParameterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COLLECTION_DATA_PARAMETER_$1, Indexes.COLLECTION_DATA_PARAMETER_$2, Indexes.COLLECTION_DATA_PARAMETER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CollectionDataParameterRecord> getPrimaryKey() {
        return Keys.KEY_COLLECTION_DATA_PARAMETER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CollectionDataParameterRecord>> getKeys() {
        return Arrays.<UniqueKey<CollectionDataParameterRecord>>asList(Keys.KEY_COLLECTION_DATA_PARAMETER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionDataParameter as(String alias) {
        return new CollectionDataParameter(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CollectionDataParameter as(Name alias) {
        return new CollectionDataParameter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionDataParameter rename(String name) {
        return new CollectionDataParameter(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CollectionDataParameter rename(Name name) {
        return new CollectionDataParameter(name, null);
    }
}
