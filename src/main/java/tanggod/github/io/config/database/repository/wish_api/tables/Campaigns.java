/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish_api.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish_api.Indexes;
import tanggod.github.io.config.database.repository.wish_api.Keys;
import tanggod.github.io.config.database.repository.wish_api.WishApi;
import tanggod.github.io.config.database.repository.wish_api.tables.records.CampaignsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Campaigns extends TableImpl<CampaignsRecord> {

    private static final long serialVersionUID = -917125316;

    /**
     * The reference instance of <code>wish_api.campaigns</code>
     */
    public static final Campaigns CAMPAIGNS = new Campaigns();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignsRecord> getRecordType() {
        return CampaignsRecord.class;
    }

    /**
     * The column <code>wish_api.campaigns.id</code>.
     */
    public final TableField<CampaignsRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.date</code>.
     */
    public final TableField<CampaignsRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.spend</code>.
     */
    public final TableField<CampaignsRecord, BigDecimal> SPEND = createField("spend", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.currency_code</code>.
     */
    public final TableField<CampaignsRecord, String> CURRENCY_CODE = createField("currency_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.impressions</code>.
     */
    public final TableField<CampaignsRecord, Integer> IMPRESSIONS = createField("impressions", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.product_id</code>.
     */
    public final TableField<CampaignsRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.date_key</code>.
     */
    public final TableField<CampaignsRecord, String> DATE_KEY = createField("date_key", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>wish_api.campaigns.auth_code</code>.
     */
    public final TableField<CampaignsRecord, String> AUTH_CODE = createField("auth_code", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * Create a <code>wish_api.campaigns</code> table reference
     */
    public Campaigns() {
        this(DSL.name("campaigns"), null);
    }

    /**
     * Create an aliased <code>wish_api.campaigns</code> table reference
     */
    public Campaigns(String alias) {
        this(DSL.name(alias), CAMPAIGNS);
    }

    /**
     * Create an aliased <code>wish_api.campaigns</code> table reference
     */
    public Campaigns(Name alias) {
        this(alias, CAMPAIGNS);
    }

    private Campaigns(Name alias, Table<CampaignsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Campaigns(Name alias, Table<CampaignsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WishApi.WISH_API;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CAMPAIGNS_1, Indexes.CAMPAIGNS_2, Indexes.CAMPAIGNS_3, Indexes.CAMPAIGNS_4, Indexes.CAMPAIGNS_5, Indexes.CAMPAIGNS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CampaignsRecord> getPrimaryKey() {
        return Keys.KEY_CAMPAIGNS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CampaignsRecord>> getKeys() {
        return Arrays.<UniqueKey<CampaignsRecord>>asList(Keys.KEY_CAMPAIGNS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Campaigns as(String alias) {
        return new Campaigns(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Campaigns as(Name alias) {
        return new Campaigns(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaigns rename(String name) {
        return new Campaigns(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaigns rename(Name name) {
        return new Campaigns(name, null);
    }
}
