/*
 * This file is generated by jOOQ.
*/
package tanggod.github.io.config.database.repository.wish.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import tanggod.github.io.config.database.repository.wish.Indexes;
import tanggod.github.io.config.database.repository.wish.Keys;
import tanggod.github.io.config.database.repository.wish.Wish;
import tanggod.github.io.config.database.repository.wish.tables.records.WishAuthRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WishAuth extends TableImpl<WishAuthRecord> {

    private static final long serialVersionUID = -961719803;

    /**
     * The reference instance of <code>wish.wish_auth</code>
     */
    public static final WishAuth WISH_AUTH = new WishAuth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WishAuthRecord> getRecordType() {
        return WishAuthRecord.class;
    }

    /**
     * The column <code>wish.wish_auth.id</code>.
     */
    public final TableField<WishAuthRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_auth.client_id</code>.
     */
    public final TableField<WishAuthRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_auth.client_secret</code>.
     */
    public final TableField<WishAuthRecord, String> CLIENT_SECRET = createField("client_secret", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_auth.access_token</code>.
     */
    public final TableField<WishAuthRecord, String> ACCESS_TOKEN = createField("access_token", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>wish.wish_auth.merchant_id</code>.
     */
    public final TableField<WishAuthRecord, String> MERCHANT_ID = createField("merchant_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>wish.wish_auth.expiry_time</code>.
     */
    public final TableField<WishAuthRecord, Timestamp> EXPIRY_TIME = createField("expiry_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wish.wish_auth.refresh_token</code>.
     */
    public final TableField<WishAuthRecord, String> REFRESH_TOKEN = createField("refresh_token", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>wish.wish_auth.auth_code</code>.
     */
    public final TableField<WishAuthRecord, String> AUTH_CODE = createField("auth_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>wish.wish_auth.enable_mail_notify</code>.
     */
    public final TableField<WishAuthRecord, Boolean> ENABLE_MAIL_NOTIFY = createField("enable_mail_notify", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>wish.wish_auth.wishpost_auth_code</code>.
     */
    public final TableField<WishAuthRecord, String> WISHPOST_AUTH_CODE = createField("wishpost_auth_code", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>wish.wish_auth</code> table reference
     */
    public WishAuth() {
        this(DSL.name("wish_auth"), null);
    }

    /**
     * Create an aliased <code>wish.wish_auth</code> table reference
     */
    public WishAuth(String alias) {
        this(DSL.name(alias), WISH_AUTH);
    }

    /**
     * Create an aliased <code>wish.wish_auth</code> table reference
     */
    public WishAuth(Name alias) {
        this(alias, WISH_AUTH);
    }

    private WishAuth(Name alias, Table<WishAuthRecord> aliased) {
        this(alias, aliased, null);
    }

    private WishAuth(Name alias, Table<WishAuthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Wish.WISH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WISH_AUTH_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WishAuthRecord> getPrimaryKey() {
        return Keys.KEY_WISH_AUTH_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WishAuthRecord>> getKeys() {
        return Arrays.<UniqueKey<WishAuthRecord>>asList(Keys.KEY_WISH_AUTH_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishAuth as(String alias) {
        return new WishAuth(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WishAuth as(Name alias) {
        return new WishAuth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WishAuth rename(String name) {
        return new WishAuth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WishAuth rename(Name name) {
        return new WishAuth(name, null);
    }
}
